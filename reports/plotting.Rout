
R version 3.1.2 (2014-10-31) -- "Pumpkin Helmet"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin10.8.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> #load libraries
> library(ggplot2)
> library(dplyr)

Attaching package: ‘dplyr’

The following object is masked from ‘package:stats’:

    filter

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

> library(reshape2)
> 
> #file name w/o csv extension
> aggregate_file <- "madison_PI_2015-01-01_to_2015-05-01_aggregate"
> 
> #load prepared csv
> df <- read.csv(paste0(aggregate_file,".csv"))
> colnames(df) <- c("PI","CPU_Hours","Max_Cores","Min_Cores","Avg_Cores")
> 
> #create graph of total hours used
> total_hours <- df %>%
+   mutate(PI = reorder(PI, CPU_Hours)) %>%
+   ggplot(aes(y=CPU_Hours, x=PI)) + 
+   geom_bar(stat="identity", color="blue", fill="blue") + 
+   coord_flip() +
+   theme(panel.background = element_blank(), 
+         axis.line = element_line(colour = "black")) +
+   labs(title="Total CPU Hours", y="CPU Hours", x="PI")
> 
> #save total hours graph
> ggsave(paste0(aggregate_file,"_hours",".png"), 
+        plot = total_hours, 
+        width=6, 
+        height=4)
> 
> #graph min/max/avg cpu usage
> cpu_usage <- df %>% 
+   select(PI,
+         Max_Cores,
+         Avg_Cores,
+         Min_Cores) %>%
+   mutate(PI = reorder(PI, Max_Cores)) %>%
+   melt(variable.name="Val", value.name = "Num_Cores") %>%  
+   ggplot(aes(x=PI, y=Num_Cores, color=Val)) + 
+   geom_point(size=4) + 
+   geom_linerange(data=df, aes(
+     x=PI, 
+     y=Avg_Cores, 
+     ymin=Min_Cores, 
+     ymax=Max_Cores, 
+     color="Range"),
+     color="black") +
+   coord_flip() + 
+   theme(panel.background = element_blank(), 
+         axis.line = element_line(colour = "black")) +
+   labs(title="Core Usage", x="PI", y="Number of Cores", color="")
Using PI as id variables
> 
> #save CPU use plot
> ggsave(paste0(aggregate_file,"_CPU_use",".png"), 
+        plot = cpu_usage, 
+        width=6, 
+        height=4)
> 
> proc.time()
   user  system elapsed 
  1.496   0.121   1.676 
